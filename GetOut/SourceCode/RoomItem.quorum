use Libraries.Interface.Controls.Button
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.HashTable
use Libraries.Containers.HashTable
use Libraries.Interface.Behaviors.Behavior

class RoomItem is Button
boolean canBePickedUp = false
text role = ""
HashTable<text, Behavior> behaviors

action GetRole returns text
return role
end

action SetRole(text role)
me:role = role
end

action GetCanBePickedUp returns boolean
return canBePickedUp
end

action SetCanBePickedUp(boolean canBePickedUp)
me:canBePickedUp = canBePickedUp
end

action GetBehaviors returns HashTable<text, Behavior>
return behaviors
end

action GenerateSummary returns text
return GetName() + " is a " + role + ". " + GetDescription()
end

action LoadFromJSON(JavaScriptObjectNotation json, HashTable<text, Behavior> behaviors)
// I don't like having this here, but Initialize concept sucks right now
Initialize(100, 100, "Item Button")

role = json:GetValue("role")
canBePickedUp = json:GetBoolean("canBePickedUp")
SetName(json:GetValue("name"))
SetDescription(json:GetValue("description"))

JavaScriptObjectNotation behaviorsJSON
behaviorsJSON:Read(json:GetValue("behaviors"))

// output("name: "+GetName()+", Description: "+GetDescription())
//output("Behavior(s): ")

counter = 0
repeat while counter < behaviorsJSON:GetSize()
text key = behaviorsJSON:Get(counter):GetText()
me:behaviors:Set(key, behaviors:GetValue(key))
counter = counter+1
end

end
end
