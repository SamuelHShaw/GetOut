use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Array
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Label
use Libraries.Interface.Layouts.Layout
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.TextBox
use Libraries.Containers.Array
use Libraries.Containers.HashTable

class Room is Drawable
Array<text> exits
Array<RoomItem> items
text name = ""
text shortDescription = ""
text longDescription = ""
Color color
Drawable roomItemsDrawable
Drawable exitsDrawable

action Render
MakeTextArea()
MakeImageArea()
MakeButtonStrip()
end

action MakeTextArea
    Layout textBoxLayout    
    textBoxLayout:SetPercentageOriginY(1.0)
    textBoxLayout:SetPercentageY(1)
    textBoxLayout:SetPercentageX(0.1)
    textBoxLayout:SetPercentageHeight(0.5)
    textBoxLayout:SetPercentageWidth(0.25)
    
TextBox textBox
textBox:Initialize(300, 300, color:White(), "Enter text in this TextBox.")
textBox:AddLayout(textBoxLayout)
textBox:Resize()
Add(textBox) 
end

action MakeImageArea
Layout imageAreaLayout
imageAreaLayout:SetPercentageOriginX(1)
imageAreaLayout:SetPercentageOriginY(1)
imageAreaLayout:SetPercentageX(1)
imageAreaLayout:SetPercentageY(1)
imageAreaLayout:SetPercentageWidth(0.3)
imageAreaLayout:SetPercentageHeight(0.5)

// todo: add border

Texture texture
texture:LoadFromFile("assets/elenaPainting.jpg")

Drawable imageArea
imageArea:Load(texture)
imageArea:AddLayout(imageAreaLayout)
imageArea:Resize()
Add(imageArea)
end

action MakeButtonStrip
Drawable itemsArea = MakeItemsArea()
Drawable exitsArea = MakeExitsArea()

    FlowLayout itemAndExitFlowLayout
    itemAndExitFlowLayout:SetPercentageWidth(0.5)
    itemAndExitFlowLayout:SetPercentageHeight(0.25)

    Drawable itemAndExitArea
    itemAndExitArea:LoadFilledRectangle(500,100,color:Blue())
    itemAndExitArea:AddLayout(itemAndExitFlowLayout)

    itemAndExitArea:Add(itemsArea)
    itemAndExitArea:Add(exitsArea)
    itemAndExitArea:Resize()
//    output itemAndExitArea:GetGlobalX() + ", " + itemAndExitArea:GetGlobalY() + " x " + itemAndExitArea:GetWidth() + ", " + itemAndExitArea:GetHeight()
    Add(itemAndExitArea)
end

action MakeItemsArea returns Drawable
    FlowLayout itemFlow
    itemFlow:SetPercentageWidth(0.4)
    itemFlow:SetPercentageHeight(1.0)

    Drawable itemArea
    itemArea:LoadFilledRectangle(100,50,color:White())
    itemArea:AddLayout(itemFlow)

integer counter = 0
repeat while counter < items:GetSize()
    itemArea:Add(items:Get(counter))
    items:Get(counter):Initialize(50, 50, "Item Button")
    counter = counter + 1
end
    
    itemArea:Resize()
roomItemsDrawable = itemArea
return itemArea
end

action MakeExitsArea returns Drawable
    FlowLayout exitFlowLayout
    exitFlowLayout:SetPercentageWidth(0.25)
    exitFlowLayout:SetPercentageHeight(1.0)
    exitFlowLayout:SetPercentageX(0.6)

    Drawable exitArea
    exitArea:LoadFilledRectangle(100,50,color:White())
    exitArea:AddLayout(exitFlowLayout)

counter = 0
repeat while counter < exits:GetSize()
Button b
b:Initialize(50, 50, exits:Get(counter))
exitArea:Add(b)
counter = counter+1
end
  
    exitArea:Resize()
exitsDrawable = exitArea
  return exitArea
end
  
action GetName returns text
return name
end

action SetName(text name)
me:name = name
end

action AddExit(text room)
exits:Add(room)
end

action GetExits returns Array<text>
return exits
end

action AddRoomItem(RoomItem item)
items:Add(item)
roomItemsDrawable:Add(item)
end

action RemoveRoomItem(RoomItem item)
items:Remove(item)
roomItemsDrawable:Remove(item)
end

action GetRoomItems returns Array<RoomItem>
return items
end

action GetShortDescription returns text
return shortDescription
end

action SetShortDescription(text shortDescription)
me:shortDescription = shortDescription
end

action GetLongDescription returns text
return longDescription
end

action SetLongDescription(text longDescription)
me:longDescription = longDescription
end

action GenerateSummary returns text
count = exits:GetSize()
return "You are in "+name+". There are "+count+" exits out of here."
end

action LoadFromJSON(JavaScriptObjectNotation json, HashTable<text, RoomItem> items)
me:name = json:GetValue("name")
me:shortDescription = json:GetValue("shortDescription")
me:longDescription = json:GetValue("longDescription")

JavaScriptObjectNotation exits
output("json:GetValue('exits'): "+json:GetValue("exits"))
exits:Read(json:GetValue("exits"))
counter = 0
repeat while counter < exits:GetSize()
me:exits:Add(exits:Get(counter):GetText())
counter = counter+1
end

JavaScriptObjectNotation itemNames
output("json:GetValue('items'): "+json:GetValue("items"))
itemNames:Read(json:GetValue("items"))
counter = 0
repeat while counter < itemNames:GetSize()
RoomItem item
me:items:Add(items:GetValue(itemNames:Get(counter):GetText()))
counter = counter+1
end

end
end
