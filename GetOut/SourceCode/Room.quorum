use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.Containers.Array
use Libraries.Game.Graphics.Drawable
use Libraries.Interface.Item
use Libraries.Interface.Item2D
use Libraries.Interface.Events.FocusListener
use Libraries.Game.Graphics.Label
use Libraries.Interface.Layouts.Layout
use Libraries.Game.Graphics.Texture
use Libraries.Game.Graphics.Color
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Behaviors.Behavior
use Libraries.Containers.Array
use Libraries.Containers.HashTable

class Room is Drawable
Array<text> exits
Array<RoomItem> items
text name = ""
text shortDescription = ""
text longDescription = ""
text imagePath = ""
Color color
Drawable roomItemsDrawable
Drawable behaviorsDrawable
Drawable buttonStripDrawable
Item2D firstFocusable
Item2D currentFocusable

action Render
MakeTextArea()
MakeImageArea()
MakeButtonStrip()
SetFocusable(true)

/*
Item cur = cast(Item, firstFocusable)
repeat while cur:GetNextFocus() not= cast(Item, firstFocusable)
output("cur: "+cur:GetName())
cur = cur:GetNextFocus()
end
*/
end

action Focus
    firstFocusable:Focus()
end

action MakeTextArea
    Layout textBoxLayout    
    textBoxLayout:SetPercentageOriginY(1.0)
    textBoxLayout:SetPercentageY(1)
    textBoxLayout:SetPercentageX(0.1)
    textBoxLayout:SetPercentageHeight(0.5)
    textBoxLayout:SetPercentageWidth(0.25)
    
TextBox textBox
textBox:Initialize(300, 300, color:White(), "Enter text in this TextBox.")
SetFirstFocus(textBox)
textBox:AddLayout(textBoxLayout)
textBox:Resize()
Add(textBox) 
end

action MakeImageArea
Layout imageAreaLayout
imageAreaLayout:SetPercentageOriginX(1)
imageAreaLayout:SetPercentageOriginY(1)
imageAreaLayout:SetPercentageX(1)
imageAreaLayout:SetPercentageY(1)
imageAreaLayout:SetPercentageWidth(0.3)
imageAreaLayout:SetPercentageHeight(0.5)

// todo: add border

Texture texture
texture:LoadFromFile(imagePath)

Drawable imageArea
imageArea:Load(texture)
imageArea:SetFocusable(true)
AddToFocus(imageArea)
imageArea:AddLayout(imageAreaLayout)
imageArea:Resize()
Add(imageArea)
end

action MakeButtonStrip
Drawable exitsArea = MakeExitsArea()
Drawable itemsArea = MakeItemsArea()
Drawable behaviorsArea = MakeBehaviorsArea()

    FlowLayout buttonStripFlowLayout
    buttonStripFlowLayout:SetPercentageWidth(1)
    buttonStripFlowLayout:SetPercentageHeight(0.5)

    Drawable buttonStrip
//    buttonStrip:LoadFilledRectangle(1000,1000,color:Blue())
    buttonStrip:AddLayout(buttonStripFlowLayout)

    buttonStrip:Add(exitsArea)
    buttonStrip:Add(itemsArea)
    buttonStrip:Add(behaviorsArea)

    buttonStrip:Resize()
buttonStripDrawable = buttonStrip
    Add(buttonStrip)
end

action MakeItemsArea returns Drawable
    FlowLayout itemFlow
    itemFlow:SetPercentageWidth(0.33)
    itemFlow:SetPercentageHeight(1.0)
    itemFlow:SetPercentageX(0.33)

    Drawable itemArea
    itemArea:AddLayout(itemFlow)

ShowBehaviorsBehavior showBehaviorsBehavior
integer counter = 0
repeat while counter < items:GetSize()
RoomItem cur = items:Get(counter)
    cur:SetBehavior(showBehaviorsBehavior)
    itemArea:Add(cur)
    AddToFocus(cur)
    counter = counter + 1
end
    
    itemArea:Resize()
roomItemsDrawable = itemArea
return itemArea
end

action MakeExitsArea returns Drawable
    FlowLayout exitFlowLayout
    exitFlowLayout:SetPercentageWidth(0.33)
    exitFlowLayout:SetPercentageHeight(1.0)

    Drawable exitArea
    exitArea:AddLayout(exitFlowLayout)

ChangeRoomBehavior changeRoomBehavior
counter = 0
repeat while counter < exits:GetSize()
Button b
b:Initialize(100, 100, exits:Get(counter))
b:SetBehavior(changeRoomBehavior)
exitArea:Add(b)
    AddToFocus(b)
counter = counter+1
end
  
    exitArea:Resize()
  return exitArea
end

action MakeBehaviorsArea returns Drawable
    FlowLayout behaviorsFlowLayout
    behaviorsFlowLayout:SetPercentageWidth(0.33)
    behaviorsFlowLayout:SetPercentageHeight(1.0)
    behaviorsFlowLayout:SetPercentageX(1.0)
    behaviorsFlowLayout:SetPercentageOriginX(1.0)


    Drawable behaviorsArea
    behaviorsArea:AddLayout(behaviorsFlowLayout)
  
    behaviorsArea:Resize()
    behaviorsDrawable = behaviorsArea
  return behaviorsArea
end

// the signatures for these two next methods must change but Sina and Andy have to argue a lot first!

action SetFirstFocus(Item2D item)
    item:SetFocusable(true)
firstFocusable = item
currentFocusable = item
//output("first focus: "+item:GetName())
end

action AddToFocus(Item2D item)
//output("add to focus: "+item:GetName())
    item:SetFocusable(true)
    item:SetPreviousFocus(currentFocusable)
    item:SetNextFocus(firstFocusable)
    currentFocusable:SetNextFocus(item)
    currentFocusable = item
end

action GetName returns text
return name
end

action SetName(text name)
me:name = name
end

action AddExit(text room)
exits:Add(room)
end

action GetExits returns Array<text>
return exits
end

action AddRoomItem(RoomItem item)
items:Add(item)
roomItemsDrawable:Add(item)
end

action RemoveRoomItem(RoomItem item)
items:Remove(item)
roomItemsDrawable:Remove(item)
end

action GetRoomItems returns Array<RoomItem>
return items
end

action GetShortDescription returns text
return shortDescription
end

action SetShortDescription(text shortDescription)
me:shortDescription = shortDescription
end

action GetLongDescription returns text
return longDescription
end

action SetLongDescription(text longDescription)
me:longDescription = longDescription
end

action GenerateSummary returns text
count = exits:GetSize()
return "You are in "+name+". There are "+count+" exits out of here."
end

action ShowBehaviorsFor(RoomItem item)
if behaviorsDrawable not= undefined
    buttonStripDrawable:Remove(behaviorsDrawable)
    MakeBehaviorsArea()
   buttonStripDrawable :Add(behaviorsDrawable)
    buttonStripDrawable:Resize()
end

    HashTable<text, Behavior> behaviors = item:GetBehaviors()
    Array<text> keys = behaviors:CopyToKeyArray()

counter = 0
repeat while counter < keys:GetSize()
text key = keys:Get(counter)
RoomItemButton b
b:Initialize(80, 80, key)
b:SetRoomItem(item)
b:SetBehavior(behaviors:GetValue(key))
//output("setting "+key+" behavior on "+b:GetName())
behaviorsDrawable:Add(b)
    AddToFocus(b)
counter = counter+1
end
    Resize()
end

action LoadFromJSON(JavaScriptObjectNotation json, HashTable<text, RoomItem> items)
me:name = json:GetValue("name")
me:shortDescription = json:GetValue("shortDescription")
me:longDescription = json:GetValue("longDescription")
me:imagePath = json:GetValue("imagePath")


output(name+", Room:LoadFromJSON")
JavaScriptObjectNotation exitNames
exitNames:Read(json:GetValue("exits"))

//output("json:GetValue('exits'): "+json:GetValue("exits"))

counter = 0
repeat while counter < exitNames:GetSize()
exits:Add(exitNames:Get(counter):GetText())
counter = counter+1
end

JavaScriptObjectNotation itemNames
itemNames:Read(json:GetValue("items"))
//output("json:GetValue('items'): "+json:GetValue("items"))

counter = 0
repeat while counter < itemNames:GetSize()
RoomItem item
me:items:Add(items:GetValue(itemNames:Get(counter):GetText()))
counter = counter+1
end

//output("me:exits size: "+me:exits:GetSize())

counter = 0
repeat while counter < me:exits:GetSize()
//output(counter+": "+me:exits:Get(counter))
counter = counter+1
end

//output("items size: "+me:items:GetSize())

counter = 0
repeat while counter < me:items:GetSize()
//output(counter+": "+me:items:Get(counter):GetName())
counter = counter+1
end

end
end
