use Libraries.Interface.Behaviors.Behavior
use Libraries.Game.Game
use Libraries.Interface.Layouts.Layout
use Libraries.Interface.Layouts.FlowLayout
use Libraries.Containers.HashTable
use Libraries.Game.DesktopConfiguration
use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.System.File
use Libraries.Sound.Audio
use Libraries.Game.Graphics.Drawable

// A text based game to escape a TSBVI dorm

class Main is Game
    text startRoom = "Sam's Bedroom"
    Character character
    Room activeRoom
    HashTable<text, Room>rooms
    HashTable<text, RoomItem> items
HashTable<text, Behavior> behaviors
Audio heart

action GetCharacter returns Character
return character
end


    action Main
        DesktopConfiguration config = GetDesktopConfiguration()
        config:resizable = true
        StartGame()
    end

    action CreateGame

Drawable background
File backgroundFile
backgroundFile:SetPath("assets/metal.jpg")
background:Load(backgroundFile)
Add(background)

InitializeBehaviors()
        InitializeCharacter()
        InitializeItems()
        InitializeRooms()
    end

action InitializeBehaviors
PickUpBehavior pickUpBehavior
behaviors:Set("PickUp", pickUpBehavior)

DropBehavior dropBehavior
behaviors:Set("Drop", dropBehavior)

DrinkBehavior drinkBehavior
behaviors:Set("Drink", drinkBehavior)

EatBehavior eatBehavior
behaviors:Set("Eat", eatBehavior)

ClotheBehavior clotheBehavior
behaviors:Set("Clothe", clotheBehavior)

end

action InitializeItems
File itemsFile
itemsFile:SetPath("GameData/items.json")

JavaScriptObjectNotation json
json:Read(itemsFile)

// output("json: "+json:ToText())

counter = 0
repeat while counter < json:GetSize()
RoomItem roomItem
roomItem:LoadFromJSON(json:Get(counter), behaviors)
items:Set(roomItem:GetName(), roomItem)
counter = counter+1
end

end

action InitializeRooms
File roomsFile
roomsFile:SetPath("GameData/rooms.json")
JavaScriptObjectNotation json
json:Read(roomsFile)

counter = 0
repeat while counter < json:GetSize()
Layout roomLayout
roomLayout:SetPercentageHeight(1.0)
roomLayout:SetPercentageWidth(1.0)


Room room
room:LoadFromJSON(json:Get(counter), items)
room:AddLayout(roomLayout)
rooms:Set(room:GetName(), room)
room:Render()
counter = counter+1
end

SetActiveRoom(startRoom)
end

action InitializeCharacter
character:SetName("Sam")
heart:LoadToStream("assets/heartbeat.wav")
heart:EnableLooping()
heart:SetVolume(1.0)
heart:Play()
end

number second = 0.0
    action Update(number seconds)
// every second, we want to do stuff
// so let's find out when each second goes by instead of each frame, 
// then we'll call an action to do those things that must occur each second

second = second+seconds
if second >= 1.0
second = 0.0
SecondPassed()
end

    end

action SecondPassed
heart:Stream()
character:LoseEnergy()
character:RunChecks()
heart:SetPitch(character:GetEnergy()/100.0)
end

action SetActiveRoom(text roomName)
// output("room name"+roomName)
SetActiveRoom(rooms:GetValue(roomName))
end

action SetActiveRoom(Room r)
if activeRoom not= undefined
Remove(activeRoom)
end

activeRoom = r
character:SetRoom(r)
Add(r)
 r:Focus()
end

action GetActiveRoom returns Room
return activeRoom
end

end