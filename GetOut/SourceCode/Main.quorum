use Libraries.Game.Game
use Libraries.Interface.Layouts.Layout
use Libraries.Containers.HashTable
use Libraries.Game.DesktopConfiguration

// A text based game to escape a TSBVI dorm

class Main is Game
    Character character
    Room startRoom
    HashTable<Text, Room>rooms 

    action Main
        DesktopConfiguration config = GetDesktopConfiguration()
        config:resizable = true
        StartGame()
    end

    action CreateGame
        InitializeCharacter()
        InitializeRooms()
    end

action MakeRoom(text name, text shortDescription, text longDescription) returns Room
    Room r
    r:SetName(name)
    r:SetShortDescription(shortDescription)
    r:SetLongDescription(longDescription)
    return r
end

action MakeItem (text name, text description, text role) returns RoomItem
    RoomItem i
    i:SetName(name)
    i:SetDescription(description)
    i:SetRole(role)
    return i
end

action InitializeRooms
Room room
Layout roomLayout
roomLayout:SetPercentageHeight(1.0)
roomLayout:SetPercentageWidth(1.0)
room:AddLayout(roomLayout)


//create first room to develop layouts, will need to dev rooms in reverse order to provide exits for the rooms

room = MakeRoom("bedroom", "short description", "longDescription")
RoomItem item
item = MakeItem("fav mug","this is the description","cup")
room:AddRoomItem(item)
RoomItem item2
item2 = MakeItem("fav mug2","this is the description","cup")
room:AddRoomItem(item2)
room:Render()

// add last made room to game
Add(room)
end

action InitializeCharacter
character:SetName("Sam")
end

number second = 0.0
    action Update(number seconds)
// every second, we want to do stuff
// so let's find out when each second goes by instead of each frame, 
// then we'll call an action to do those things that must occur each second

second = second+seconds
if second >= 1.0
second = 0.0
SecondPassed()
end

    end

action SecondPassed
character:RunChecks()
end

action Add(Room r)
r:Render()
parent:Game:Add(r)
end

end